from __future__ import print_function
import random
class Employee:
    def __init__(self, wholename, salary):
        self.wholename = wholename
        self.salary = salary

def choosing():
    print ("if want an ascending order write 1")

if raw_input = 1:
    def bubble_sort(collection):
        length = len(collection)
        for i in range(length):
            swapped = False
            for j in range(length - 1):
                if collection[j].salary > collection[j + 1].salary:
                    swapped = True
                    collection[j].salary, collection[j + 1].salary = collection[j + 1].salary, collection[j].salary
            if not swapped: break
        return collection
    if __name__ == '__main__':
        try:
            raw_input
        except NameError:
            raw_input = input

    user_input = raw_input('Enter numbers separated by a comma:\n').strip()
    unsorted = [int(item) for item in user_input.split(',')]
    print(bubble_sort(unsorted))

else:
    def bubble_sort1(collection):
        length = len(collection)
        for i in range(length):
            swapped = False
            for j in range(length - 1):
                if collection[j].salary < collection[j + 1].salary:
                    swapped = True
                    collection[j].salary, collection[j + 1].salary = collection[j + 1].salary, collection[j].salary
            if not swapped: break
        return collection

if __name__ == '__main__':
    try:
        raw_input
    except NameError:
        raw_input = input

    user_input = raw_input('Enter numbers separated by a comma:\n').strip()
    unsorted = [int(item) for item in user_input.split(',')]
    print(bubble_sort1(unsorted))


def main():
    employees = []
    for i in range(0, 100):
        e1 = Employee("Example 1 " + str(i), random.randint(1,100))
        employees.append(e1)
    print employees
main()

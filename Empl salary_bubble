from __future__ import print_function
import random
class Employee:
    def __init__(self, wholename, salary):
        self.wholename = wholename
        self.salary = salary

def bubble_sort(collection, ascending):
    length = len(collection)
    for i in range(length):
        swapped = False
        for j in range(length - 1):
            if ascending:
                if collection[j].salary > collection[j + 1].salary:
                    swapped = True
                    collection[j].salary, collection[j + 1].salary = collection[j + 1].salary, collection[j].salary
            else:
                if collection[j].salary < collection[j + 1].salary:
                    swapped = True
                    collection[j].salary, collection[j + 1].salary = collection[j + 1].salary, collection[j].salary
        if not swapped: break
    return collection

def choosing():

    user_input2 = raw_input("If want an ascending order write 1, else` write 0\n").strip()
    sorted = bubble_sort(unsorted, bool(int(user_input2)))


    for sortedElement in sorted:
        print(sortedElement.wholename + " earns " +str(sortedElement.salary))

if __name__ == '__main__':
    try:
        raw_input
    except NameError:
        raw_input = input

    user_input = raw_input('Enter numbers separated by a comma:\n').strip()
    unsorted = []
    user_inp = user_input.split(',')
    name_index = 1
    for item in user_inp:
        newEmployee = Employee("Name" + str(name_index), int(item))
        name_index += 1
        unsorted.append(newEmployee)

    choosing()

def main():
    employees = []
    for i in range(0, 100):
        e1 = Employee("Example 1 " + str(i), random.randint(1,100))
        employees.append(e1)

main()

from __future__ import print_function
import random
class Employee:
    def __init__(self, wholename, salary):
        self.wholename = wholename
        self.salary = salary

def choosing():
    print ("if want an ascending order write 1")

if raw_input = 1:

    def quick_sort(ARRAY):
        ARRAY_LENGTH = len(ARRAY)
        if( ARRAY_LENGTH <= 1):
            return ARRAY
        else:
            PIVOT = ARRAY[0]
            GREATER = [ element for element in ARRAY[1:] if element > PIVOT ]
            LESSER = [ element for element in ARRAY[1:] if element <= PIVOT ]
            return quick_sort(LESSER) + [PIVOT] + quick_sort(GREATER)

    if __name__ == '__main__':
        try:
            raw_input          # Python 2
        except NameError:
            raw_input = input  # Python 3

        user_input = raw_input('Enter numbers separated by a comma:\n').strip()
        unsorted = [ int(item) for item in user_input.split(',') ]
        print( quick_sort(unsorted) )

else:
    def quick_sort(ARRAY):
        ARRAY_LENGTH = len(ARRAY)
        if( ARRAY_LENGTH <= 1):
            return ARRAY
        else:
            PIVOT = ARRAY[0]
            GREATER = [ element for element in ARRAY[1:] if element < PIVOT ]
            LESSER = [ element for element in ARRAY[1:] if element >= PIVOT ]
            return quick_sort(LESSER) + [PIVOT] + quick_sort(GREATER)

    if __name__ == '__main__':
        try:
            raw_input          # Python 2
        except NameError:
            raw_input = input  # Python 3

        user_input = raw_input('Enter numbers separated by a comma:\n').strip()
        unsorted = [ int(item) for item in user_input.split(',') ]
        print( quick_sort(unsorted) )
def main():
    employees = []
    for i in range(0, 100):
        e1 = Employee("Example 1 " + str(i), random.randint(1,100))
        employees.append(e1)
    print employees
main()
